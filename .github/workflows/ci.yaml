name: Code quality check and Testing

on:
    pull_request:
        types: [opened, synchronize, reopened]
        branches: [master]
        paths: ['packages/frontend/**', 'packages/backend/**']

    push:
        branches: [master]
        paths: ['packages/frontend/**', 'packages/backend/**']

concurrency:
    group: ${{ github.ref }}
    cancel-in-progress: true

jobs:
    code-quality-check:
        runs-on: ubuntu-latest

        steps:
            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '20.14.0'

            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Cache npm dependencies
              uses: actions/cache@v4
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-

            - name: Install dependencies
              run: npm ci

            - name: Run ESLint
              run: npm run lint

            - name: Run JSCPD (Code Duplication Check)
              run: npm run check-duplication > duplication-output.txt

            - name: Upload Duplication Check Summary
              if: failure()
              run: |
                  echo "### Duplication Check Result" >> $GITHUB_STEP_SUMMARY
                  cat duplication-output.txt >> $GITHUB_STEP_SUMMARY

    backend-test:
        runs-on: ubuntu-latest

        services:
            db:
                image: mysql:8.0
                env:
                    MYSQL_ROOT_PASSWORD: root
                ports:
                    - 3306:3306

        steps:
            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '20.14.0'

            - name: Checkout
              uses: actions/checkout@v4

            - name: Cache npm dependencies
              uses: actions/cache@v4
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-

            - name: Install dependencies
              run: npm ci

            - name: Setup Backend
              working-directory: packages/backend
              run: |
                  echo "${{ secrets.TEST_BACKEND_ENV }}" > .env
                  npm run migrate

            - name: Run jest
              working-directory: packages/backend
              run: npm run test

    cypress-component-test:
        runs-on: ubuntu-latest

        steps:
            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '20.14.0'

            - name: Checkout
              uses: actions/checkout@v4

            - name: Cache npm dependencies
              uses: actions/cache@v4
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-

            - name: Install dependencies
              run: npm ci

            - name: Setup Frontend
              working-directory: packages/frontend
              run: echo "${{ secrets.TEST_FRONTEND_ENV }}" > .env

            - name: Cypress run
              working-directory: packages/frontend
              run: npm run cy:run -- --component --browser chrome

            - name: Archive production artifacts
              if: failure()
              uses: actions/upload-artifact@v4
              with:
                  name: cypress-results
                  path: |
                      packages/frontend/cypress/screenshots

    cypress-e2e-desktop:
        runs-on: ubuntu-latest

        services:
            db:
                image: mysql:8.0
                env:
                    MYSQL_ROOT_PASSWORD: root
                ports:
                    - 3306:3306

        steps:
            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '20.14.0'

            - name: Checkout
              uses: actions/checkout@v4

            - name: Cache npm dependencies
              uses: actions/cache@v4
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-

            - name: Install dependencies
              run: npm ci

            - name: Setup Frontend
              working-directory: packages/frontend
              run: echo "${{ secrets.TEST_FRONTEND_ENV }}" > .env

            - name: Setup Backend
              working-directory: packages/backend
              run: |
                  echo "${{ secrets.TEST_BACKEND_ENV }}" > .env
                  npm run migrate

            - name: Run Services
              run: nohup lerna run dev --stream --scope=frontend --scope=backend -- --mode test &

            - name: Cypress run
              working-directory: packages/frontend
              run: npm run cy:run -- --e2e --browser chrome

            - name: Archive production artifacts
              if: failure()
              uses: actions/upload-artifact@v4
              with:
                  name: cypress-results
                  path: |
                      packages/frontend/cypress/screenshots

    cypress-e2e-mobile:
        runs-on: ubuntu-latest

        services:
            db:
                image: mysql:8.0
                env:
                    MYSQL_ROOT_PASSWORD: root
                ports:
                    - 3306:3306

        steps:
            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '20.14.0'

            - name: Checkout
              uses: actions/checkout@v4

            - name: Cache npm dependencies
              uses: actions/cache@v4
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-

            - name: Install dependencies
              run: npm ci

            - name: Setup Frontend
              working-directory: packages/frontend
              run: echo "${{ secrets.TEST_FRONTEND_ENV }}" > .env

            - name: Setup Backend
              working-directory: packages/backend
              run: |
                  echo "${{ secrets.TEST_BACKEND_ENV }}" > .env
                  npm run migrate

            - name: Run Services
              run: nohup lerna run dev --stream --scope=frontend --scope=backend -- --mode test &

            - name: Cypress run
              working-directory: packages/frontend
              run: npm run cy:run -- --e2e --browser chrome

            - name: Archive production artifacts
              if: failure()
              uses: actions/upload-artifact@v4
              with:
                  name: cypress-results
                  path: |
                      packages/frontend/cypress/screenshots
