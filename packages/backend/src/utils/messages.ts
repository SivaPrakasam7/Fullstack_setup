export default {
    responses: {
        failedToCreateUser: 'User creation failed. Please try again later',
        userCreated: 'User has been successfully created',
        userNotFound: 'User not found',
        userEmailAlreadyExist: 'An account with this email already exists',
        userPhoneAlreadyExist:
            'An account with this phone number already exists',
        userUpdateFailed: 'Failed to update user details. Please try again',
        userUpdated: 'User details updated successfully',
        noPasswordAuth: 'Password authentication is not supported',
        invalidCred: 'Invalid credentials. Please check and try again',
        unverifiedUser: 'Your account has not been verified',
        tokenNotFound: 'Authentication token is missing',
        tokenExpired: 'Your session has expired. Please log in again',
        unauthorized: 'You do not have permission to perform this action',
        verified: 'Your account has been successfully verified',
        passwordChanged: 'Password updated successfully',
        passwordDoesNotMatch: 'Passwords do not match. Please try again',
        passwordChangeFailed: 'Failed to update password. Please try again',
        previousPasswordError:
            'New password cannot be the same as the old password',
        success: 'Operation completed successfully',
        failed: 'Operation failed. Please try again',
        expired: 'The requested resource has expired',
        notFound: 'The requested resource was not found',
        mailFailed: 'Failed to send email. Please try again',
        mailSent: 'Email has been sent successfully!',
        otpSent: 'OTP has been sent successfully!',
        otpFailed: 'Failed to send OTP. Please try again',
        otpVerificationFailed: 'OTP verification failed. Please try again',
        keyExpired: 'KEY_EXPIRED',
        invalidRequest: 'The request is invalid',
        accountSuspended: (time: number) =>
            `Your account has been suspended due to multiple invalid login attempts. Access will be restored in ${time} minutes.`,

        harmfulContent: `Input contains potentially harmful content`,
        harmfulFile: 'Harmful file detected',
        fileNotFound: 'File not found',
    },
};
