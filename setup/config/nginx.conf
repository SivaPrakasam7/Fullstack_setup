worker_processes  1;

events {
    worker_connections  1024;
}

http {
    types_hash_max_size 2048;  # Increase max size (default is 1024)
    types_hash_bucket_size 128;  # Increase bucket size (default is 64)

    include       mime.types;
    default_type  application/octet-stream;

    server_tokens off;
    sendfile        on;
    keepalive_timeout  65;
    client_max_body_size 500M;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    map $http_origin $cors_origin {
        default "";
        "~^https://(.*\.)?local\.com$" $http_origin;  # Allow all subdomains of local.com
    }

    server {
        listen 80;
        server_name *.local.com;
        return 301 https://www.local.com$request_uri;
    }

    server {
        listen 443;
        server_name *.local.com;

        # SSL configurations
        ssl_certificate      /path_to_ssl_certificate.crt;
        ssl_certificate_key  /path_to_ssl_certificate_key.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        client_max_body_size 500M;

        # CORS Headers
        add_header 'Access-Control-Allow-Origin' $cors_origin always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, PATCH, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization, X-Requested-With' always;

        if ($request_method = OPTIONS) {
            return 204;
        }

        # Security Headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Content-Security-Policy "default-src 'self'; font-src 'self'; frame-src *; frame-ancestors 'self'; style-src 'self' 'unsafe-inline'; script-src 'self'; media-src 'self' blob:; img-src 'self' data: blob:; connect-src 'self' data:;" always;
        add_header Cross-Origin-Resource-Policy cross-origin;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Permissions-Policy "fullscreen=(self), geolocation=(self)" always;
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

        # Proxy configurations
        # Backend API
        location /api/ {
            proxy_pass http://localhost:3006/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Streaming support
            proxy_buffering off;
            proxy_request_buffering off;
            proxy_set_header Connection keep-alive;
        }

        # Frontend
        location / {
            proxy_pass http://localhost:3000/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}