<IfModule mod_ssl.c>
# Disable version disclosure
ServerTokens Prod
ServerSignature Off

# Mozilla Guideline v5.4, Apache 2.4.41, OpenSSL 1.1.1d, intermediate configuration, no OCSP
SSLProtocol         all -SSLv3 -TLSv1 -TLSv1.1
SSLCipherSuite      ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
SSLHonorCipherOrder off
SSLSessionTickets   off

<VirtualHost *:80>
    ServerName *.local.com
    Redirect permanent / https://www.local.com/
</VirtualHost>

<VirtualHost *:443>
    ServerName local.com
    ServerAlias *.local.com

    # SSL configurations
    SSLEngine on
    SSLCertificateFile      /path_to_ssl_certificate.crt
    SSLCertificateKeyFile   /path_to_ssl_certificate_key.key

    # SSL Session Cache and Timeout
    # SSLSessionCache shmcb:/var/run/apache2/ssl_scache(1048576)
    SSLSessionCacheTimeout 600
    LimitRequestBody 524288000

    # Enable rewrite engine
    RewriteEngine On

    # Allow CORS for subdomains of local.com
    RewriteCond %{HTTP:Origin} ^https://(.*\.)?local\.com$ [NC]
    RewriteRule ^ - [E=CORS_ORIGIN:%{HTTP:Origin}]

    # Add CORS headers if the origin is valid
    Header always set Access-Control-Allow-Origin "%{CORS_ORIGIN}e" env=CORS_ORIGIN
    Header always set Access-Control-Allow-Credentials "true"
    Header always set Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, PATCH, DELETE"
    Header always set Access-Control-Allow-Headers "Origin, Content-Type, Accept, Authorization, X-Requested-With"

    # Stream support
    SetEnv no-gzip 1
    Timeout 300
    ProxyTimeout 300

    # Handle preflight (OPTIONS) requests
    <If "%{REQUEST_METHOD} == 'OPTIONS'">
        Header always set Access-Control-Max-Age "86400" env=CORS_ORIGIN
        Header always set Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, PATCH, DELETE" env=CORS_ORIGIN
        Header always set Access-Control-Allow-Headers "Origin, Content-Type, Accept, Authorization, X-Requested-With" env=CORS_ORIGIN
        Header always set Access-Control-Allow-Credentials "true" env=CORS_ORIGIN
        RewriteRule ^ - [R=204,L]
    </If>

    # Security Headers
    Header always set X-Frame-Options "SAMEORIGIN"
    Header always set X-Content-Type-Options "nosniff"
    Header always set X-XSS-Protection "1; mode=block"
    Header always set Content-Security-Policy "default-src 'self'; font-src 'self'; frame-src *; frame-ancestors 'self'; style-src 'self' 'unsafe-inline'; script-src 'self'; media-src 'self' blob:; img-src 'self' data: blob:; connect-src 'self';"
    Header always set Referrer-Policy "no-referrer-when-downgrade"
    Header always set Permissions-Policy "fullscreen=(self), geolocation=(self)"
    Header always set Strict-Transport-Security "max-age=63072000; includeSubDomains; preload"

    ProxyPass /api/ http://localhost:3006/
    ProxyPassReverse /api/ http://localhost:3006/

    ProxyPass / http://localhost:3000/
    ProxyPassReverse / http://localhost:3000/

    # Available loglevels: trace8, ..., trace1, debug, info, notice, warn,
    # error, crit, alert, emerg.
    # It is also possible to configure the loglevel for particular
    # modules, e.g.
    #LogLevel info ssl:warn

    ErrorLog ${APACHE_LOG_DIR}/error.log
    CustomLog ${APACHE_LOG_DIR}/access.log combined

    # For most configuration files from conf-available/, which are
    # enabled or disabled at a global level, it is possible to
    # include a line for only one particular virtual host. For example the
    # following line enables the CGI configuration for this host only
    # after it has been globally disabled with "a2disconf".
    #Include conf-available/serve-cgi-bin.conf

</VirtualHost>
</IfModule>